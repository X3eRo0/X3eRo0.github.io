<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rev on X3eRo0&#39;s Blog about Reverse Engineering</title>
    <link>https://x3ero0.github.io/categories/rev/</link>
    <description>Recent content in Rev on X3eRo0&#39;s Blog about Reverse Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2008–2021</copyright>
    <lastBuildDate>Sun, 07 Jun 2020 05:39:55 +0000</lastBuildDate>
    
	<atom:link href="https://x3ero0.github.io/categories/rev/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Float Writeup</title>
      <link>https://x3ero0.github.io/posts/float-writeup/</link>
      <pubDate>Sun, 07 Jun 2020 05:39:55 +0000</pubDate>
      
      <guid>https://x3ero0.github.io/posts/float-writeup/</guid>
      <description>&lt;p&gt;Solving the Float &lt;a href=&#34;https://x3ero0.github.io/crackmes/fl04t/&#34;&gt;crackme&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Hell86 - ttlhacker</title>
      <link>https://x3ero0.github.io/posts/hell86_from_ttlhacker/</link>
      <pubDate>Mon, 18 May 2020 13:03:48 +0000</pubDate>
      
      <guid>https://x3ero0.github.io/posts/hell86_from_ttlhacker/</guid>
      <description>Hell86   Author : ttlhacker Language : Assembler Upload : 8:03 PM 10/12/2018 Level : 3 Platform : Unix/Linux etc. Crackme : crackmes.one  1 2 3 4 5 6 7 8  Desc: - x86_64 linux binary (tested on debian 9 and ubuntu 18.04, should run on any distro). - Takes one command line argument and outputs &amp;#34;OK!&amp;#34; if it&amp;#39;s correct, &amp;#34;Wrong&amp;#34; if it&amp;#39;s not. - Partially written in C, actual verification routine is assembly.</description>
    </item>
    
    <item>
      <title>Reversing a malware in disguise</title>
      <link>https://x3ero0.github.io/posts/reversing_a_malware_in_disguise/</link>
      <pubDate>Tue, 14 Apr 2020 17:51:27 +0000</pubDate>
      
      <guid>https://x3ero0.github.io/posts/reversing_a_malware_in_disguise/</guid>
      <description>hljs.initHighlightingOnLoad(); My Friend recommended this Super Awesome game The_Elder_Scrolls_V_Skyrim.zip and obviously it was downloaded from a random website from the internet ( some ripoff of the OceanOfGames.com ). The contents of the The_Elder_Scrolls_V_Skyrim.zip are as follows : -
 The setup file was very much suspicious because
 the size was only 506KB Windows Defender was preventing it from extracting in the VM. the icon was also acting weird when view of the file explorer was changed (i don&amp;rsquo;t really know whats up with that) but a well made setup for game wont go crazy like this.</description>
    </item>
    
    <item>
      <title>Watevr_repyc</title>
      <link>https://x3ero0.github.io/posts/watevr_repyc/</link>
      <pubDate>Fri, 10 Apr 2020 20:20:07 +0000</pubDate>
      
      <guid>https://x3ero0.github.io/posts/watevr_repyc/</guid>
      <description>hljs.initHighlightingOnLoad(); Challenge: REPYC [REV] - 147 Points Challenge Description:
 woo thi chal sooo repyc! file: 3nohtyp.pyc Difficulty estimate: Easy  We are given a pyc file and running file on this pyc reveals that its a python 3.6 compiled python bytecode.
1 2  [~]$ file 3nohtyp.pyc 3nohtyp.pyc: python 3.6 byte-compiled   so i went with the usuall approach to a python pyc challenge, where the first part is to decompile the bytecode.</description>
    </item>
    
    <item>
      <title>HSCTF License</title>
      <link>https://x3ero0.github.io/posts/hsctf-license/</link>
      <pubDate>Fri, 10 Apr 2020 20:06:26 +0000</pubDate>
      
      <guid>https://x3ero0.github.io/posts/hsctf-license/</guid>
      <description>Challenge: License [ 298(DYN) RE ] Challenge Description:
1 2 3 4 5 6 7 8 9 10 11  Written by: ItzSomebody Description: Keith made a cool license-checking program but he forgot the flag he used to create the key! To make matters worse, he lost the source code and stripped the binary for his license-generator program. Can you help Keith recover his flag? All he knows is: • The license key is 4-EZF2M-7O5F4-V9P7O-EVFDP-E4VDO-O • He put his name (in the form of &amp;#39;k3ith&amp;#39;) as the first part of the flag • There are 3 underscores • The flag is in the format hsctf{} • The flag doesn&amp;#39;t have random character sequences (you should be able to read the entire flag easily).</description>
    </item>
    
  </channel>
</rss>